import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.LinkedList;
import java.util.Queue;
import java.util.StringTokenizer;
class Point{
	private int x;
	private int y;
	public Point(int x, int y) {
		this.x = x;
		this.y = y;
	}
	public int getx() {return x;}
	public int gety() {return y;}
}
public class Main {
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		int a = Integer.parseInt(st.nextToken());
		int b = Integer.parseInt(st.nextToken());
		Point p = new Point(0,0);
		Queue<Point> q = new LinkedList<>();
		int line[][] = new int[a][b];
		boolean con[][] = new boolean[a][b];
		for(int i = 0; i < a; i++) {
			String s = br.readLine();
			for(int j = 0; j < b; j++) {
				int num = s.charAt(j) - '0';
				line[i][j] = num;
				con[i][j] = false;
			}
		}
		int dx[] = {-1,1,0,0};
		int dy[] = {0,0,-1,1};
		int nextx = 0; int nexty = 0;
		q.add(new Point(0,0));
		while(!q.isEmpty()) {
			Point p1 = q.poll();
			con[p.getx()][p.gety()] = true;
			for(int i = 0; i < 4; i++) {
				if((q.size() == 2) && ((i == 1) || (i == 3))) {
					nextx = p1.getx() + dy[i];
					nexty = p1.gety() + dx[i];
				} else {
					nextx = p1.getx() + dy[i];
					nexty = p1.gety() + dx[i];
				}
				if(0 <= nextx && nextx < a && 0 <= nexty && nexty < b) {
					if(line[nextx][nexty] == 1 && !con[nextx][nexty]) {
						q.add(new Point(nextx,nexty));
						con[nextx][nexty] = true;
						line[nextx][nexty] = line[p1.getx()][p1.gety()] + 1;
					}
				}
			}
		}
		System.out.println(line[a-1][b-1]);
	}
}

https://wiselog.tistory.com/163
백준 미로 찾기
내 생각: 카운트(cnt++)를 샐 생각만 했었지 그 자리에 숫자를 더해가면서 진행시키는 것을 생각 안했다.
그리고 끝에 숫자만 출력하면 되는데, 끝에 숫자에 도달하면 반복문이 끝나는걸로 생각 회로가 잘못 되있었다.