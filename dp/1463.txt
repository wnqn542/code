package practice;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.lang.Math;
import java.util.StringTokenizer;
public class Main {
	static Integer dp[];
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		int n = Integer.parseInt(st.nextToken());
		dp = new Integer[n+1];
		dp[0] = dp[1] = 0;
		for(int i = 1; i <= n; i++)
			toOne(i);
		bw.write(toOne(n)+"");
		bw.flush();
		bw.close();
	}
	static int toOne(int n) {
		if(dp[n] == null) {
			if(n % 6 == 0) {
				dp[n] = Math.min(toOne(n-1), Math.min(toOne(n/3), toOne(n/2))) + 1;
			}
			else if(n % 3 == 0) {
				dp[n] = Math.min(toOne(n-1), toOne(n/3)) + 1;
			}
			else if(n % 2 == 0) {
				dp[n] = Math.min(toOne(n-1), toOne(n/2)) + 1;
			}
			else {
				dp[n] = toOne(n-1) + 1;
			}
		}
		return dp[n];
	}
}

첫 다이나믹 프로그래밍이라 코드를 참조해서 풀었다.
https://bada744.tistory.com/61